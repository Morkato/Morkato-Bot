// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"

  url = env("DATABASE_URL")
}

enum ArtType {
  RESPIRATION
  KEKKIJUTSU
}

model Guild {
  id String @id

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  arts    Art[]
  attacks Attack[]
  vars    Variable[]

  @@map("guilds")
}

model Art {
  guild Guild @relation(fields: [guild_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  name String
  id   String
  type ArtType

  guild_id String

  embed_title       String?
  embed_description String?
  embed_url         String?

  attacks Attack[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([id, guild_id])
  @@map("arts")
}

model Attack {
  name String
  id   String

  guild   Guild    @relation(fields: [guild_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  art     Art?     @relation(fields: [art_id, guild_id], references: [id, guild_id], onDelete: Cascade, onUpdate: Cascade)
  attacks Attack[] @relation("ParentAttack")

  guild_id String
  art_id   String?

  parent Attack? @relation("ParentAttack", fields: [parent_id, guild_id], references: [id, guild_id])

  parent_id String?

  required_exp Int @default(0)

  embed_title       String?
  embed_description String?
  embed_url         String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([id, guild_id])
  @@map("attacks")
}

model Variable {
  guild Guild @relation(fields: [guild_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  guild_id String

  name String
  text String

  required_roles Int      @default(1)
  roles          String[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([guild_id, name])
  @@map("guild_variables")
}
