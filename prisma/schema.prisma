// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ArtType {
  RESPIRATION
  KEKKIJUTSU
}

model Guild {
  id String @id

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  arts          Art[]        @relation()
  fields        Field[]
  groups_fields GroupField[]

  @@map("guilds")
}

model Art {
  name String
  key  String
  type ArtType
  role String?

  guild    Guild  @relation(fields: [guild_id], references: [id], onDelete: Cascade)
  guild_id String

  embed_title       String?
  embed_description String?
  embed_url         String?

  attacks Attack[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([key, guild_id])
  @@map("arts")
}

model Attack {
  name String
  key  String

  art    Art         @relation(fields: [art_key, guild_id], references: [key, guild_id], onDelete: Cascade)
  fields GroupField? @relation(fields: [fields_key, guild_id], references: [key, guild_id])

  art_key  String
  guild_id String

  roles          String[] @default([])
  required_roles Int      @default(0)
  required_exp   Int      @default(0)

  damage  Int @default(3000)
  stamina Int @default(3000)

  embed_title       String?
  embed_description String?
  embed_url         String?

  fields_key String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([key, guild_id])
  @@map("attacks")
}

model Field {
  name String

  group GroupField? @relation(fields: [group_key, guild_id], references: [key, guild_id])

  guild Guild @relation(fields: [guild_id], references: [id])

  guild_id String

  text           String
  roles          String[]
  required_roles Int      @default(1)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  group_key String?

  @@id([guild_id, name])
  @@map("attacks_fields")
}

model GroupField {
  name String
  key  String

  guild   Guild    @relation(fields: [guild_id], references: [id])
  attacks Attack[]

  attack_key String?
  guild_id   String

  fields Field[]

  @@id([guild_id, key])
  @@map("group_fields")
}
