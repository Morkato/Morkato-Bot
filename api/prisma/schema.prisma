// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"

  url = env("DATABASE_URL")
}

enum Bool {
  true
  false
}

enum ArtType {
  RESPIRATION
  KEKKIJUTSU
  FIGHTING_STYLE
}

enum PlayerBreed {
  HUMAN
  ONI
  HYBRID
}

model Guild {
  id String @id(map: "guild_pkey")

  arts      Art[]
  attacks   Attack[]
  players   Player[]
  inventory PlayerItem[]
  playerArts PlayerArt[]
  items     Item[]

  @@map("guilds")
}

model Art {
  guild Guild @relation(fields: [guild_id], references: [id], onDelete: Cascade, map: "fkey.guild_id")
  players PlayerArt[]
  attacks Attack[]

  key String

  name String
  id   String
  type ArtType

  guild_id String

  embed_title       String?
  embed_description String?
  embed_url         String?

  exclude Bool @default(false)

  created_by String?
  updated_at DateTime?

  @@id([guild_id, id], map: "art_pkey")
  @@unique([guild_id, key], map: "art_key")
  @@map("arts")
}

model Attack {
  key String

  name String
  id   String
  
  title String?
  description String?
  banner String?

  guild   Guild    @relation(fields: [guild_id], references: [id], onDelete: Cascade, map: "fkey.guild_id")
  art     Art?     @relation(fields: [art_id, guild_id], references: [id, guild_id], map: "fkey.art_id")
  attacks Attack[] @relation("ParentAttack")

  guild_id String
  art_id   String

  parent Attack? @relation("ParentAttack", fields: [parent_id, guild_id], references: [id, guild_id], map: "fkey.parent_id")

  parent_id String?

  damage Int @default(0)
  breath Int @default(0)
  blood  Int @default(0)

  exclude Bool @default(false)

  // Intents: Inteções do ataque.
  
  // 0: Nenhuma
  // (1 << 2): Indesviável
  // (1 << 3): Indefensável
  // (1 << 4): Em área
  // (1 << 5): Combável
  // (1 << 6): Não contra atacável
  // (1 << 7): Contra Ataque
  // (1 << 8): Dano Somável
  // (1 << 9): Fôlego Somável
  // (1 << 10): Sangue Somável
  // (1 << 11): Usável para defesa

  intents Int @db.Integer @default(0)

  embed_title       String? // deprecated
  embed_description String? // deprecated
  embed_url         String? // deprecated

  created_by String?
  updated_at DateTime?

  @@id([guild_id, id], map: "attack_pkey")
  @@unique([guild_id, key], map: "attack_key")
  @@map("attacks")
}

model Item {
  guild   Guild        @relation(fields: [guild_id], references: [id], onDelete: Cascade, map: "fkey.guild_id")
  players PlayerItem[]

  guild_id String
  id       String

  key String

  name        String
  description String?

  stack      Int  @default(1) @db.SmallInt
  usable     Bool @default(false)
  equippable Int  @default(0) @db.SmallInt

  embed_title       String?
  embed_description String?
  embed_url         String?

  created_by String?
  updated_at DateTime?

  @@id([guild_id, id], map: "item_pkey")
  @@unique([guild_id, key], map: "item_key")
  @@map("items")
}

model Player {
  guild     Guild        @relation(fields: [guild_id], references: [id], onDelete: Cascade, map: "fkey.guild_id")
  arts PlayerArt[]
  inventory PlayerItem[]

  name        String
  surname     String?
  credibility Int     @default(0)
  history     String?

  guild_id String
  id       String
  breed    PlayerBreed

  cash Int @default(0)

  life       Int @default(0)
  blood      Int @default(0)
  breath     Int @default(0)
  exp        Int @default(0)
  force      Int @default(0)
  resistance Int @default(0)
  velocity   Int @default(1)

  appearance String?
  banner     String?

  updated_at DateTime?

  @@id([guild_id, id], map: "player_pkey")
  @@map("players")
}

model PlayerArt {
  guild Guild @relation(fields: [guild_id], references: [id], onDelete: Cascade, map: "fkey.guild_id")
  player Player @relation(fields: [guild_id, player_id], references: [guild_id, id], onDelete: Cascade, map: "fkey.player_id")
  art Art @relation(fields: [guild_id, art_id], references: [guild_id, id], onDelete: Cascade, map: "fkey.art_id")

  guild_id String
  player_id String
  art_id String

  created_at DateTime @default(now())

  @@id([guild_id, player_id, art_id])
  @@map("player_arts")
}

model PlayerItem {
  guild  Guild  @relation(fields: [guild_id], references: [id], onDelete: Cascade, map: "fkey.guild_id")
  player Player @relation(fields: [guild_id, player_id], references: [guild_id, id], onDelete: Cascade, map: "fkey.player_id")
  item   Item   @relation(fields: [guild_id, item_id], references: [guild_id, id], onDelete: Cascade, map: "fkey.item_id")

  guild_id  String
  item_id   String
  player_id String

  stack Int @default(1) @db.SmallInt

  created_at DateTime @default(now())

  @@id([guild_id, player_id, item_id], map: "inventory_pkey")
  @@map("inventory")
}
